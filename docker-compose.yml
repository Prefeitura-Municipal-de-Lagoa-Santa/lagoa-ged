services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lagoa-ged
    restart: unless-stopped
    ports:
      # Expõe a aplicação na porta 8000
      - "8001:80"
      - "5173:5173" # Vite dev server (HMR)
    volumes:
      - .:/var/www/html
      - /dados/PMLS/film:/var/www/html/storage/documentos
    networks:
      # Conecta à sua rede principal já existente
      - rede_geral_existente
    env_file:
      - .env
      
  mongodb_prod: # Nome do serviço dentro desta stack
    image: mongo:latest # Use uma tag específica para produção, ex: mongo:6.0.13
    container_name: lagoa_mongo # MUITO IMPORTANTE: Este nome deve ser o DB_HOST da sua aplicação Laravel
    restart: always # Garante que o contêiner reinicie com o Docker ou em caso de falha
    ports:
      # Expõe a aplicação na porta 8000
      - "65017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      #MONGO_INITDB_DATABASE: lagoa_ged_db 
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    env_file:
      - .env
    networks:
      - rede_geral_existente # Conecta à mesma rede que a aplicação Laravel
  
  redis_prod: # Nome do serviço dentro desta stack
    image: redis/redis-stack-server:latest # Use uma tag específica para produção, ex: mongo:6.0.13
    container_name: lagoa_redis # MUITO IMPORTANTE: Este nome deve ser o DB_HOST da sua aplicação Laravel
    restart: always # Garante que o contêiner reinicie com o Docker ou em caso de falha
    ports:
      # Expõe a aplicação na porta 8000
      - "6679:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    env_file:
      - .env
    networks:
      - rede_geral_existente # Conecta à mesma rede que a aplicação Laravel

volumes:
  mongodb_data:
    external: true
    name: mongodb_data_restored
  mongodb_config:
    driver: local
  redis_data:
    driver: local

networks:
  rede_geral_existente:
    external: true
    # Garanta que este é o nome exato da sua rede externa
    name: rede_dados_geral